{"ast":null,"code":"var _jsxFileName = \"/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/components/ResultDisplay.js\";\nimport React from \"react\";\nimport { formatCurrency } from \"../utils/calculations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultDisplay = ({\n  principal,\n  finalAmount,\n  interestType,\n  monthlyRate,\n  period,\n  // period in months for calculations\n  periodUnit,\n  originalPeriod,\n  // original period value entered by user\n  compoundFreq\n}) => {\n  const interestEarned = finalAmount - principal;\n\n  // Format period display with improved logic\n  const formatPeriodDisplay = () => {\n    const totalMonths = period;\n\n    // If less than 12 months, show only months\n    if (totalMonths < 12) {\n      return `${totalMonths} ${totalMonths === 1 ? \"month\" : \"months\"}`;\n    }\n\n    // If 12 months or more, show years and months with total months in bracket\n    const years = Math.floor(totalMonths / 12);\n    const remainingMonths = totalMonths % 12;\n    let displayText = \"\";\n\n    // Add years part\n    if (years > 0) {\n      displayText += `${years} ${years === 1 ? \"year\" : \"years\"}`;\n    }\n\n    // Add months part if there are remaining months\n    if (remainingMonths > 0) {\n      if (displayText) displayText += \" \";\n      displayText += `${remainingMonths} ${remainingMonths === 1 ? \"month\" : \"months\"}`;\n    }\n\n    // Add total months in bracket\n    displayText += ` (${totalMonths} months)`;\n    return displayText;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    role: \"region\",\n    \"aria-label\": \"Calculation Result\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calculation Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculation-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-label\",\n          children: \"Interest Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-value\",\n          children: interestType === \"simple\" ? \"Simple Interest\" : `Compound Interest (${compoundFreq})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-label\",\n          children: \"Monthly Rate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-value\",\n          children: [monthlyRate, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-label\",\n          children: \"Time Period:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-value\",\n          children: formatPeriodDisplay()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-label\",\n          children: \"Principal Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-value\",\n          children: formatCurrency(principal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-label\",\n          children: \"Interest Charged:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-value interest-earned\",\n          children: formatCurrency(interestEarned)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item final-amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-label\",\n          children: \"Final Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-value\",\n          children: formatCurrency(finalAmount)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultDisplay;\nexport default ResultDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultDisplay\");","map":{"version":3,"names":["React","formatCurrency","jsxDEV","_jsxDEV","ResultDisplay","principal","finalAmount","interestType","monthlyRate","period","periodUnit","originalPeriod","compoundFreq","interestEarned","formatPeriodDisplay","totalMonths","years","Math","floor","remainingMonths","displayText","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/components/ResultDisplay.js"],"sourcesContent":["import React from \"react\";\nimport { formatCurrency } from \"../utils/calculations\";\n\nconst ResultDisplay = ({\n  principal,\n  finalAmount,\n  interestType,\n  monthlyRate,\n  period, // period in months for calculations\n  periodUnit,\n  originalPeriod, // original period value entered by user\n  compoundFreq,\n}) => {\n  const interestEarned = finalAmount - principal;\n\n\n  // Format period display with improved logic\n  const formatPeriodDisplay = () => {\n    const totalMonths = period;\n    \n    // If less than 12 months, show only months\n    if (totalMonths < 12) {\n      return `${totalMonths} ${totalMonths === 1 ? \"month\" : \"months\"}`;\n    }\n    \n    // If 12 months or more, show years and months with total months in bracket\n    const years = Math.floor(totalMonths / 12);\n    const remainingMonths = totalMonths % 12;\n    \n    let displayText = \"\";\n    \n    // Add years part\n    if (years > 0) {\n      displayText += `${years} ${years === 1 ? \"year\" : \"years\"}`;\n    }\n    \n    // Add months part if there are remaining months\n    if (remainingMonths > 0) {\n      if (displayText) displayText += \" \";\n      displayText += `${remainingMonths} ${remainingMonths === 1 ? \"month\" : \"months\"}`;\n    }\n    \n    // Add total months in bracket\n    displayText += ` (${totalMonths} months)`;\n    \n    return displayText;\n  };\n\n  return (\n    <div\n      className=\"result-container\"\n      role=\"region\"\n      aria-label=\"Calculation Result\"\n    >\n      <h2>Calculation Summary</h2>\n\n      <div className=\"calculation-info\">\n        <div className=\"info-item\">\n          <span className=\"info-label\">Interest Type:</span>\n          <span className=\"info-value\">\n            {interestType === \"simple\"\n              ? \"Simple Interest\"\n              : `Compound Interest (${compoundFreq})`}\n          </span>\n        </div>\n        <div className=\"info-item\">\n          <span className=\"info-label\">Monthly Rate:</span>\n          <span className=\"info-value\">{monthlyRate}%</span>\n        </div>\n        <div className=\"info-item\">\n          <span className=\"info-label\">Time Period:</span>\n          <span className=\"info-value\">{formatPeriodDisplay()}</span>\n        </div>\n      </div>\n\n      <div className=\"result-details\">\n        <div className=\"result-item\">\n          <span className=\"result-label\">Principal Amount:</span>\n          <span className=\"result-value\">{formatCurrency(principal)}</span>\n        </div>\n        <div className=\"result-item\">\n          <span className=\"result-label\">Interest Charged:</span>\n          <span className=\"result-value interest-earned\">\n            {formatCurrency(interestEarned)}\n          </span>\n        </div>\n\n\n\n\n        <div className=\"result-item final-amount\">\n          <span className=\"result-label\">Final Amount:</span>\n          <span className=\"result-value\">{formatCurrency(finalAmount)}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}