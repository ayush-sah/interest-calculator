{"ast":null,"code":"var _jsxFileName = \"/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport InputField from \"./components/InputField\";\nimport SelectField from \"./components/SelectField\";\nimport ToggleSwitch from \"./components/ToggleSwitch\";\nimport ResultDisplay from \"./components/ResultDisplay\";\nimport { useValidatedInput } from \"./hooks/useValidatedInput\";\nimport { calculateSimpleInterest, calculateCompoundInterest, validateInputs } from \"./utils/calculations\";\nimport \"./App.css\";\n\n// Validation functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validators = {\n  amount: value => {\n    if (!value || value <= 0) return \"Amount must be greater than 0\";\n    if (value > 10000000) return \"Amount cannot exceed â‚¹10,000,000\";\n    return \"\";\n  },\n  rate: value => {\n    if (value < 0) return \"Interest rate cannot be negative\";\n    if (value > 100) return \"Interest rate cannot exceed 100%\";\n    return \"\";\n  },\n  period: (value, unit) => {\n    if (!value || value <= 0) return \"Period must be greater than 0\";\n    const maxValue = unit === \"years\" ? 100 : 1200;\n    if (value > maxValue) return `Period cannot exceed ${maxValue} ${unit}`;\n    return \"\";\n  }\n};\nexport default function InterestCalculator() {\n  _s();\n  const [periodUnit, setPeriodUnit] = useState(\"months\");\n  const [amount, setAmount, amountError, isAmountValid, resetAmount] = useValidatedInput(0, validators.amount);\n  const [monthlyRate, setMonthlyRate, rateError, isRateValid, resetRate] = useValidatedInput(0, validators.rate);\n  const [period, setPeriod, periodError, isPeriodValid, resetPeriod] = useValidatedInput(0, value => validators.period(value, periodUnit), [periodUnit] // Re-validate when period unit changes\n  );\n  const [interestType, setInterestType] = useState(\"simple\");\n  const [compoundFreq, setCompoundFreq] = useState(\"monthly\");\n  const [result, setResult] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [calculationError, setCalculationError] = useState(\"\");\n  const hasErrors = amountError || rateError || periodError;\n  const hasEmptyFields = !amount || !monthlyRate || !period;\n  const canCalculate = !hasErrors && !hasEmptyFields && isAmountValid && isRateValid && isPeriodValid;\n\n  // Convert period to months for calculations\n  const periodInMonths = periodUnit === \"years\" ? period * 12 : period;\n  const calculateInterest = useCallback(async () => {\n    if (!canCalculate) return;\n    setIsCalculating(true);\n    setCalculationError(\"\");\n\n    // Add a small delay for better UX\n    await new Promise(resolve => setTimeout(resolve, 300));\n    try {\n      const validation = validateInputs(amount, monthlyRate, periodInMonths);\n      if (!validation.isValid) {\n        setCalculationError(validation.errors.join(\", \"));\n        return;\n      }\n      let finalAmount;\n      if (interestType === \"simple\") {\n        finalAmount = calculateSimpleInterest(amount, monthlyRate, periodInMonths);\n      } else {\n        finalAmount = calculateCompoundInterest(amount, monthlyRate, periodInMonths, compoundFreq);\n      }\n\n      // Round to 2 decimal places\n      setResult(Math.round(finalAmount * 100) / 100);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setCalculationError(\"An error occurred during calculation. Please check your inputs.\");\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [amount, monthlyRate, periodInMonths, interestType, compoundFreq, canCalculate]);\n  const resetCalculator = useCallback(() => {\n    resetAmount();\n    resetRate();\n    resetPeriod();\n    setPeriodUnit(\"months\");\n    setInterestType(\"simple\");\n    setCompoundFreq(\"monthly\");\n    setResult(null);\n    setCalculationError(\"\");\n  }, [resetAmount, resetRate, resetPeriod]);\n\n  // Handle period unit change and convert existing value\n  const handlePeriodUnitChange = useCallback(newUnit => {\n    if (period > 0) {\n      let convertedPeriod;\n      if (newUnit === \"years\" && periodUnit === \"months\") {\n        // Convert months to years\n        convertedPeriod = Math.round(period / 12 * 100) / 100; // Round to 2 decimal places\n      } else if (newUnit === \"months\" && periodUnit === \"years\") {\n        // Convert years to months\n        convertedPeriod = Math.round(period * 12);\n      } else {\n        convertedPeriod = period;\n      }\n      setPeriod(convertedPeriod);\n    }\n    setPeriodUnit(newUnit);\n  }, [period, periodUnit, setPeriod]);\n  const interestTypeOptions = [{\n    value: \"simple\",\n    label: \"Simple Interest\"\n  }, {\n    value: \"compound\",\n    label: \"Compound Interest\"\n  }];\n  const compoundFreqOptions = [{\n    value: \"monthly\",\n    label: \"Monthly\"\n  }, {\n    value: \"yearly\",\n    label: \"Yearly\"\n  }];\n  const periodUnitOptions = {\n    leftOption: {\n      value: \"months\",\n      label: \"Months\"\n    },\n    rightOption: {\n      value: \"years\",\n      label: \"Years\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"calculator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Interest Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Calculate simple and compound interest with precision and ease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"calculator-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          calculateInterest();\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Principal Amount\",\n          value: amount,\n          onChange: setAmount,\n          error: amountError,\n          placeholder: \"Enter amount in \\u20B9\",\n          min: \"0\",\n          max: \"10000000\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Monthly Interest Rate\",\n          value: monthlyRate,\n          onChange: setMonthlyRate,\n          error: rateError,\n          placeholder: \"Enter monthly rate (%)\",\n          min: \"0\",\n          max: \"100\",\n          step: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"period-input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"period-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"period-input-field\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                label: \"Time Period\",\n                value: period,\n                onChange: setPeriod,\n                error: periodError,\n                placeholder: `Enter period in ${periodUnit}`,\n                min: \"0\",\n                max: periodUnit === \"years\" ? \"100\" : \"1200\",\n                step: periodUnit === \"years\" ? \"0.1\" : \"1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"period-toggle-container\",\n              children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n                label: \"Unit\",\n                leftOption: periodUnitOptions.leftOption,\n                rightOption: periodUnitOptions.rightOption,\n                value: periodUnit,\n                onChange: handlePeriodUnitChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          label: \"Interest Type\",\n          value: interestType,\n          onChange: setInterestType,\n          options: interestTypeOptions,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), interestType === \"compound\" && /*#__PURE__*/_jsxDEV(SelectField, {\n          label: \"Compounding Frequency\",\n          value: compoundFreq,\n          onChange: setCompoundFreq,\n          options: compoundFreqOptions,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), calculationError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculation-error\",\n          role: \"alert\",\n          children: calculationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !canCalculate || isCalculating,\n            className: \"calculate-button\",\n            \"aria-describedby\": \"calculation-status\",\n            children: isCalculating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-spinner\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), \"Calculating...\"]\n            }, void 0, true) : \"Calculate Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: resetCalculator,\n            className: \"reset-button\",\n            children: \"Reset All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), result !== null && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        principal: amount,\n        finalAmount: result,\n        interestType: interestType,\n        monthlyRate: monthlyRate,\n        period: periodInMonths,\n        periodUnit: periodUnit,\n        originalPeriod: period,\n        compoundFreq: compoundFreq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(InterestCalculator, \"8NApPmSlM5WvwA26CZSuHbKrVhQ=\", false, function () {\n  return [useValidatedInput, useValidatedInput, useValidatedInput];\n});\n_c = InterestCalculator;\nvar _c;\n$RefreshReg$(_c, \"InterestCalculator\");","map":{"version":3,"names":["React","useState","useCallback","InputField","SelectField","ToggleSwitch","ResultDisplay","useValidatedInput","calculateSimpleInterest","calculateCompoundInterest","validateInputs","jsxDEV","_jsxDEV","Fragment","_Fragment","validators","amount","value","rate","period","unit","maxValue","InterestCalculator","_s","periodUnit","setPeriodUnit","setAmount","amountError","isAmountValid","resetAmount","monthlyRate","setMonthlyRate","rateError","isRateValid","resetRate","setPeriod","periodError","isPeriodValid","resetPeriod","interestType","setInterestType","compoundFreq","setCompoundFreq","result","setResult","isCalculating","setIsCalculating","calculationError","setCalculationError","hasErrors","hasEmptyFields","canCalculate","periodInMonths","calculateInterest","Promise","resolve","setTimeout","validation","isValid","errors","join","finalAmount","Math","round","error","console","resetCalculator","handlePeriodUnitChange","newUnit","convertedPeriod","interestTypeOptions","label","compoundFreqOptions","periodUnitOptions","leftOption","rightOption","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","onChange","placeholder","min","max","required","step","options","role","type","disabled","onClick","principal","originalPeriod","_c","$RefreshReg$"],"sources":["/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport InputField from \"./components/InputField\";\nimport SelectField from \"./components/SelectField\";\nimport ToggleSwitch from \"./components/ToggleSwitch\";\nimport ResultDisplay from \"./components/ResultDisplay\";\nimport { useValidatedInput } from \"./hooks/useValidatedInput\";\nimport {\n  calculateSimpleInterest,\n  calculateCompoundInterest,\n  validateInputs,\n} from \"./utils/calculations\";\nimport \"./App.css\";\n\n// Validation functions\nconst validators = {\n  amount: (value) => {\n    if (!value || value <= 0) return \"Amount must be greater than 0\";\n    if (value > 10000000) return \"Amount cannot exceed â‚¹10,000,000\";\n    return \"\";\n  },\n  rate: (value) => {\n    if (value < 0) return \"Interest rate cannot be negative\";\n    if (value > 100) return \"Interest rate cannot exceed 100%\";\n    return \"\";\n  },\n  period: (value, unit) => {\n    if (!value || value <= 0) return \"Period must be greater than 0\";\n    const maxValue = unit === \"years\" ? 100 : 1200;\n    if (value > maxValue) return `Period cannot exceed ${maxValue} ${unit}`;\n    return \"\";\n  },\n};\n\nexport default function InterestCalculator() {\n  const [periodUnit, setPeriodUnit] = useState(\"months\");\n\n  const [amount, setAmount, amountError, isAmountValid, resetAmount] =\n    useValidatedInput(0, validators.amount);\n  const [monthlyRate, setMonthlyRate, rateError, isRateValid, resetRate] =\n    useValidatedInput(0, validators.rate);\n  const [period, setPeriod, periodError, isPeriodValid, resetPeriod] =\n    useValidatedInput(\n      0,\n      (value) => validators.period(value, periodUnit),\n      [periodUnit] // Re-validate when period unit changes\n    );\n\n  const [interestType, setInterestType] = useState(\"simple\");\n  const [compoundFreq, setCompoundFreq] = useState(\"monthly\");\n  const [result, setResult] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [calculationError, setCalculationError] = useState(\"\");\n\n  const hasErrors = amountError || rateError || periodError;\n  const hasEmptyFields = !amount || !monthlyRate || !period;\n  const canCalculate =\n    !hasErrors &&\n    !hasEmptyFields &&\n    isAmountValid &&\n    isRateValid &&\n    isPeriodValid;\n\n  // Convert period to months for calculations\n  const periodInMonths = periodUnit === \"years\" ? period * 12 : period;\n\n  const calculateInterest = useCallback(async () => {\n    if (!canCalculate) return;\n\n    setIsCalculating(true);\n    setCalculationError(\"\");\n\n    // Add a small delay for better UX\n    await new Promise((resolve) => setTimeout(resolve, 300));\n\n    try {\n      const validation = validateInputs(amount, monthlyRate, periodInMonths);\n\n      if (!validation.isValid) {\n        setCalculationError(validation.errors.join(\", \"));\n        return;\n      }\n\n      let finalAmount;\n\n      if (interestType === \"simple\") {\n        finalAmount = calculateSimpleInterest(\n          amount,\n          monthlyRate,\n          periodInMonths\n        );\n      } else {\n        finalAmount = calculateCompoundInterest(\n          amount,\n          monthlyRate,\n          periodInMonths,\n          compoundFreq\n        );\n      }\n\n      // Round to 2 decimal places\n      setResult(Math.round(finalAmount * 100) / 100);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setCalculationError(\n        \"An error occurred during calculation. Please check your inputs.\"\n      );\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [\n    amount,\n    monthlyRate,\n    periodInMonths,\n    interestType,\n    compoundFreq,\n    canCalculate,\n  ]);\n\n  const resetCalculator = useCallback(() => {\n    resetAmount();\n    resetRate();\n    resetPeriod();\n    setPeriodUnit(\"months\");\n    setInterestType(\"simple\");\n    setCompoundFreq(\"monthly\");\n    setResult(null);\n    setCalculationError(\"\");\n  }, [resetAmount, resetRate, resetPeriod]);\n\n  // Handle period unit change and convert existing value\n  const handlePeriodUnitChange = useCallback(\n    (newUnit) => {\n      if (period > 0) {\n        let convertedPeriod;\n        if (newUnit === \"years\" && periodUnit === \"months\") {\n          // Convert months to years\n          convertedPeriod = Math.round((period / 12) * 100) / 100; // Round to 2 decimal places\n        } else if (newUnit === \"months\" && periodUnit === \"years\") {\n          // Convert years to months\n          convertedPeriod = Math.round(period * 12);\n        } else {\n          convertedPeriod = period;\n        }\n        setPeriod(convertedPeriod);\n      }\n      setPeriodUnit(newUnit);\n    },\n    [period, periodUnit, setPeriod]\n  );\n\n  const interestTypeOptions = [\n    { value: \"simple\", label: \"Simple Interest\" },\n    { value: \"compound\", label: \"Compound Interest\" },\n  ];\n\n  const compoundFreqOptions = [\n    { value: \"monthly\", label: \"Monthly\" },\n    { value: \"yearly\", label: \"Yearly\" },\n  ];\n\n  const periodUnitOptions = {\n    leftOption: { value: \"months\", label: \"Months\" },\n    rightOption: { value: \"years\", label: \"Years\" },\n  };\n\n  return (\n    <div className=\"calculator-container\">\n      <header className=\"calculator-header\">\n        <h1>Interest Calculator</h1>\n        <p>Calculate simple and compound interest with precision and ease</p>\n      </header>\n\n      <main className=\"calculator-form\">\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            calculateInterest();\n          }}\n        >\n          <InputField\n            label=\"Principal Amount\"\n            value={amount}\n            onChange={setAmount}\n            error={amountError}\n            placeholder=\"Enter amount in â‚¹\"\n            min=\"0\"\n            max=\"10000000\"\n            required\n          />\n\n          <InputField\n            label=\"Monthly Interest Rate\"\n            value={monthlyRate}\n            onChange={setMonthlyRate}\n            error={rateError}\n            placeholder=\"Enter monthly rate (%)\"\n            min=\"0\"\n            max=\"100\"\n            step=\"0.01\"\n            required\n          />\n\n          <div className=\"period-input-group\">\n            <div className=\"period-input-container\">\n              <div className=\"period-input-field\">\n                <InputField\n                  label=\"Time Period\"\n                  value={period}\n                  onChange={setPeriod}\n                  error={periodError}\n                  placeholder={`Enter period in ${periodUnit}`}\n                  min=\"0\"\n                  max={periodUnit === \"years\" ? \"100\" : \"1200\"}\n                  step={periodUnit === \"years\" ? \"0.1\" : \"1\"}\n                  required\n                />\n              </div>\n              <div className=\"period-toggle-container\">\n                <ToggleSwitch\n                  label=\"Unit\"\n                  leftOption={periodUnitOptions.leftOption}\n                  rightOption={periodUnitOptions.rightOption}\n                  value={periodUnit}\n                  onChange={handlePeriodUnitChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <SelectField\n            label=\"Interest Type\"\n            value={interestType}\n            onChange={setInterestType}\n            options={interestTypeOptions}\n            required\n          />\n\n          {interestType === \"compound\" && (\n            <SelectField\n              label=\"Compounding Frequency\"\n              value={compoundFreq}\n              onChange={setCompoundFreq}\n              options={compoundFreqOptions}\n              required\n            />\n          )}\n\n          {calculationError && (\n            <div className=\"calculation-error\" role=\"alert\">\n              {calculationError}\n            </div>\n          )}\n\n          <div className=\"button-group\">\n            <button\n              type=\"submit\"\n              disabled={!canCalculate || isCalculating}\n              className=\"calculate-button\"\n              aria-describedby=\"calculation-status\"\n            >\n              {isCalculating ? (\n                <>\n                  <span className=\"loading-spinner\" aria-hidden=\"true\"></span>\n                  Calculating...\n                </>\n              ) : (\n                \"Calculate Interest\"\n              )}\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={resetCalculator}\n              className=\"reset-button\"\n            >\n              Reset All\n            </button>\n          </div>\n        </form>\n\n        {result !== null && (\n          <ResultDisplay\n            principal={amount}\n            finalAmount={result}\n            interestType={interestType}\n            monthlyRate={monthlyRate}\n            period={periodInMonths}\n            periodUnit={periodUnit}\n            originalPeriod={period}\n            compoundFreq={compoundFreq}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}