{"ast":null,"code":"var _jsxFileName = \"/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport InputField from \"./components/InputField\";\nimport SelectField from \"./components/SelectField\";\nimport PeriodInput from \"./components/PeriodInput\";\nimport ResultDisplay from \"./components/ResultDisplay\";\nimport LanguageToggle from \"./components/LanguageToggle\";\nimport { useLanguage } from \"./contexts/LanguageContext\";\nimport { useValidatedInput } from \"./hooks/useValidatedInput\";\nimport { t } from \"./utils/translations\";\nimport { calculateSimpleInterest, calculateCompoundInterest, validateInputs } from \"./utils/calculations\";\nimport \"./App.css\";\n\n// Validation functions with translations\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validators = {\n  amount: value => {\n    if (!value || value <= 0) return t('amountRequired', language);\n    if (value > 10000000) return t('amountLimit', language);\n    return \"\";\n  },\n  rate: value => {\n    if (!value) return t('rateRequired', language);\n    if (value < 0) return t('rateNegative', language);\n    if (value > 100) return t('rateLimit', language);\n    return \"\";\n  },\n  period: (value, unit) => {\n    if (!value || value <= 0) return t('periodRequired', language);\n    const maxValue = unit === \"years\" ? 100 : 1200;\n    const limitKey = unit === \"years\" ? 'periodLimitYears' : 'periodLimitMonths';\n    if (value > maxValue) return t(limitKey, language);\n    return \"\";\n  }\n};\nexport default function InterestCalculator() {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const [periodUnit, setPeriodUnit] = useState(\"months\");\n  const [amount, setAmount, amountError, isAmountValid, resetAmount] = useValidatedInput('', validators.amount);\n  const [monthlyRate, setMonthlyRate, rateError, isRateValid, resetRate] = useValidatedInput('', validators.rate);\n  const [period, setPeriod, periodError, isPeriodValid, resetPeriod] = useValidatedInput('', value => validators.period(value, periodUnit), [periodUnit, language]);\n  const [interestType, setInterestType] = useState(\"simple\");\n  const [compoundFreq, setCompoundFreq] = useState(\"monthly\");\n  const [result, setResult] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [calculationError, setCalculationError] = useState(\"\");\n  const hasErrors = amountError || rateError || periodError;\n  const hasEmptyFields = !amount || !monthlyRate || !period;\n  const canCalculate = !hasErrors && !hasEmptyFields && isAmountValid && isRateValid && isPeriodValid;\n\n  // Convert period to months for calculations\n  const periodInMonths = periodUnit === \"years\" ? period * 12 : period;\n  const calculateInterest = useCallback(async () => {\n    if (!canCalculate) return;\n    setIsCalculating(true);\n    setCalculationError(\"\");\n\n    // Add a small delay for better UX\n    await new Promise(resolve => setTimeout(resolve, 300));\n    try {\n      const validation = validateInputs(amount, monthlyRate, periodInMonths);\n      if (!validation.isValid) {\n        setCalculationError(validation.errors.join(\", \"));\n        return;\n      }\n      let finalAmount;\n      if (interestType === \"simple\") {\n        finalAmount = calculateSimpleInterest(amount, monthlyRate, periodInMonths);\n      } else {\n        finalAmount = calculateCompoundInterest(amount, monthlyRate, periodInMonths, compoundFreq);\n      }\n\n      // Round to 2 decimal places\n      setResult(Math.round(finalAmount * 100) / 100);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n      setCalculationError(t('calculationError', language));\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [amount, monthlyRate, periodInMonths, interestType, compoundFreq, canCalculate, language]);\n  const resetCalculator = useCallback(() => {\n    resetAmount();\n    resetRate();\n    resetPeriod();\n    setPeriodUnit(\"months\");\n    setInterestType(\"simple\");\n    setCompoundFreq(\"monthly\");\n    setResult(null);\n    setCalculationError(\"\");\n  }, [resetAmount, resetRate, resetPeriod]);\n\n  // Handle period unit change and convert existing value\n  const handlePeriodUnitChange = useCallback(newUnit => {\n    if (period > 0) {\n      let convertedPeriod;\n      if (newUnit === \"years\" && periodUnit === \"months\") {\n        // Convert months to years\n        convertedPeriod = Math.round(period / 12 * 100) / 100;\n      } else if (newUnit === \"months\" && periodUnit === \"years\") {\n        // Convert years to months\n        convertedPeriod = Math.round(period * 12);\n      } else {\n        convertedPeriod = period;\n      }\n      setPeriod(convertedPeriod);\n    }\n    setPeriodUnit(newUnit);\n  }, [period, periodUnit, setPeriod]);\n  const interestTypeOptions = [{\n    value: \"simple\",\n    label: t('simpleInterest', language)\n  }, {\n    value: \"compound\",\n    label: t('compoundInterest', language)\n  }];\n  const compoundFreqOptions = [{\n    value: \"monthly\",\n    label: t('monthly', language)\n  }, {\n    value: \"yearly\",\n    label: t('yearly', language)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"calculator-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-top\",\n        children: /*#__PURE__*/_jsxDEV(LanguageToggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('title', language)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('subtitle', language)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"calculator-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          calculateInterest();\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          label: t('principalAmount', language),\n          value: amount,\n          onChange: setAmount,\n          error: amountError,\n          placeholder: t('enterAmount', language),\n          min: \"0\",\n          max: \"10000000\",\n          required: true,\n          showRupeeFormat: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: t('monthlyInterestRate', language),\n          value: monthlyRate,\n          onChange: setMonthlyRate,\n          error: rateError,\n          placeholder: t('enterMonthlyRate', language),\n          min: \"0\",\n          max: \"100\",\n          step: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PeriodInput, {\n          period: period,\n          periodUnit: periodUnit,\n          onPeriodChange: setPeriod,\n          onUnitChange: handlePeriodUnitChange,\n          error: periodError,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          label: t('interestType', language),\n          value: interestType,\n          onChange: setInterestType,\n          options: interestTypeOptions,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), interestType === \"compound\" && /*#__PURE__*/_jsxDEV(SelectField, {\n          label: t('compoundingFrequency', language),\n          value: compoundFreq,\n          onChange: setCompoundFreq,\n          options: compoundFreqOptions,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), calculationError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculation-error\",\n          role: \"alert\",\n          children: calculationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !canCalculate || isCalculating,\n            className: \"calculate-button\",\n            \"aria-describedby\": \"calculation-status\",\n            children: isCalculating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-spinner\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), \"Calculating...\"]\n            }, void 0, true) : \"Calculate Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: resetCalculator,\n            className: \"reset-button\",\n            children: \"Reset All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), result !== null && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        principal: amount,\n        finalAmount: result,\n        interestType: interestType,\n        monthlyRate: monthlyRate,\n        period: periodInMonths,\n        periodUnit: periodUnit,\n        originalPeriod: period,\n        compoundFreq: compoundFreq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(InterestCalculator, \"z0bxlIVdAecPBikILEwH24DN714=\", false, function () {\n  return [useLanguage, useValidatedInput, useValidatedInput, useValidatedInput];\n});\n_c = InterestCalculator;\nvar _c;\n$RefreshReg$(_c, \"InterestCalculator\");","map":{"version":3,"names":["React","useState","useCallback","InputField","SelectField","PeriodInput","ResultDisplay","LanguageToggle","useLanguage","useValidatedInput","t","calculateSimpleInterest","calculateCompoundInterest","validateInputs","jsxDEV","_jsxDEV","Fragment","_Fragment","validators","amount","value","language","rate","period","unit","maxValue","limitKey","InterestCalculator","_s","periodUnit","setPeriodUnit","setAmount","amountError","isAmountValid","resetAmount","monthlyRate","setMonthlyRate","rateError","isRateValid","resetRate","setPeriod","periodError","isPeriodValid","resetPeriod","interestType","setInterestType","compoundFreq","setCompoundFreq","result","setResult","isCalculating","setIsCalculating","calculationError","setCalculationError","hasErrors","hasEmptyFields","canCalculate","periodInMonths","calculateInterest","Promise","resolve","setTimeout","validation","isValid","errors","join","finalAmount","Math","round","error","console","resetCalculator","handlePeriodUnitChange","newUnit","convertedPeriod","interestTypeOptions","label","compoundFreqOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","onChange","placeholder","min","max","required","showRupeeFormat","step","onPeriodChange","onUnitChange","options","role","type","disabled","onClick","principal","originalPeriod","_c","$RefreshReg$"],"sources":["/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport InputField from \"./components/InputField\";\nimport SelectField from \"./components/SelectField\";\nimport PeriodInput from \"./components/PeriodInput\";\nimport ResultDisplay from \"./components/ResultDisplay\";\nimport LanguageToggle from \"./components/LanguageToggle\";\nimport { useLanguage } from \"./contexts/LanguageContext\";\nimport { useValidatedInput } from \"./hooks/useValidatedInput\";\nimport { t } from \"./utils/translations\";\nimport {\n  calculateSimpleInterest,\n  calculateCompoundInterest,\n  validateInputs,\n} from \"./utils/calculations\";\nimport \"./App.css\";\n\n\n// Validation functions with translations\nconst validators = {\n  amount: (value) => {\n\n\n    if (!value || value <= 0) return t('amountRequired', language);\n    if (value > 10000000) return t('amountLimit', language);\n    return \"\";\n  },\n  rate: (value) => {\n\n\n\n    if (!value) return t('rateRequired', language);\n    if (value < 0) return t('rateNegative', language);\n    if (value > 100) return t('rateLimit', language);\n    return \"\";\n  },\n  period: (value, unit) => {\n\n    if (!value || value <= 0) return t('periodRequired', language);\n    const maxValue = unit === \"years\" ? 100 : 1200;\n\n    const limitKey = unit === \"years\" ? 'periodLimitYears' : 'periodLimitMonths';\n    if (value > maxValue) return t(limitKey, language);\n    return \"\";\n  },\n};\n\nexport default function InterestCalculator() {\n  const { language } = useLanguage();\n  const [periodUnit, setPeriodUnit] = useState(\"months\");\n\n  const [amount, setAmount, amountError, isAmountValid, resetAmount] =\n    useValidatedInput('', validators.amount);\n  const [monthlyRate, setMonthlyRate, rateError, isRateValid, resetRate] =\n    useValidatedInput('', validators.rate);\n  const [period, setPeriod, periodError, isPeriodValid, resetPeriod] =\n    useValidatedInput(\n      '',\n      (value) => validators.period(value, periodUnit),\n\n      [periodUnit, language]\n    );\n\n  const [interestType, setInterestType] = useState(\"simple\");\n  const [compoundFreq, setCompoundFreq] = useState(\"monthly\");\n  const [result, setResult] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [calculationError, setCalculationError] = useState(\"\");\n\n  const hasErrors = amountError || rateError || periodError;\n  const hasEmptyFields = !amount || !monthlyRate || !period;\n  const canCalculate =\n    !hasErrors &&\n    !hasEmptyFields &&\n    isAmountValid &&\n    isRateValid &&\n    isPeriodValid;\n\n  // Convert period to months for calculations\n  const periodInMonths = periodUnit === \"years\" ? period * 12 : period;\n\n  const calculateInterest = useCallback(async () => {\n    if (!canCalculate) return;\n\n    setIsCalculating(true);\n    setCalculationError(\"\");\n\n    // Add a small delay for better UX\n    await new Promise((resolve) => setTimeout(resolve, 300));\n\n    try {\n      const validation = validateInputs(amount, monthlyRate, periodInMonths);\n\n      if (!validation.isValid) {\n        setCalculationError(validation.errors.join(\", \"));\n        return;\n      }\n\n      let finalAmount;\n\n      if (interestType === \"simple\") {\n        finalAmount = calculateSimpleInterest(\n          amount,\n          monthlyRate,\n          periodInMonths\n        );\n      } else {\n        finalAmount = calculateCompoundInterest(\n          amount,\n          monthlyRate,\n          periodInMonths,\n          compoundFreq\n        );\n      }\n\n      // Round to 2 decimal places\n      setResult(Math.round(finalAmount * 100) / 100);\n    } catch (error) {\n      console.error(\"Calculation error:\", error);\n\n\n\n      setCalculationError(t('calculationError', language));\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [\n    amount,\n    monthlyRate,\n    periodInMonths,\n    interestType,\n    compoundFreq,\n    canCalculate,\n    language,\n  ]);\n\n  const resetCalculator = useCallback(() => {\n    resetAmount();\n    resetRate();\n    resetPeriod();\n    setPeriodUnit(\"months\");\n    setInterestType(\"simple\");\n    setCompoundFreq(\"monthly\");\n    setResult(null);\n    setCalculationError(\"\");\n  }, [resetAmount, resetRate, resetPeriod]);\n\n  // Handle period unit change and convert existing value\n  const handlePeriodUnitChange = useCallback(\n    (newUnit) => {\n      if (period > 0) {\n        let convertedPeriod;\n        if (newUnit === \"years\" && periodUnit === \"months\") {\n          // Convert months to years\n          convertedPeriod = Math.round((period / 12) * 100) / 100;\n        } else if (newUnit === \"months\" && periodUnit === \"years\") {\n          // Convert years to months\n          convertedPeriod = Math.round(period * 12);\n        } else {\n          convertedPeriod = period;\n        }\n        setPeriod(convertedPeriod);\n      }\n      setPeriodUnit(newUnit);\n    },\n    [period, periodUnit, setPeriod]\n  );\n\n  const interestTypeOptions = [\n\n\n    { value: \"simple\", label: t('simpleInterest', language) },\n    { value: \"compound\", label: t('compoundInterest', language) },\n  ];\n\n  const compoundFreqOptions = [\n\n\n    { value: \"monthly\", label: t('monthly', language) },\n    { value: \"yearly\", label: t('yearly', language) },\n  ];\n\n  return (\n    <div className=\"calculator-container\">\n      <header className=\"calculator-header\">\n\n\n        <div className=\"header-top\">\n          <LanguageToggle />\n        </div>\n        <h1>{t('title', language)}</h1>\n        <p>{t('subtitle', language)}</p>\n      </header>\n\n      <main className=\"calculator-form\">\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            calculateInterest();\n          }}\n        >\n          <InputField\n\n            label={t('principalAmount', language)}\n            value={amount}\n            onChange={setAmount}\n            error={amountError}\n\n            placeholder={t('enterAmount', language)}\n            min=\"0\"\n            max=\"10000000\"\n            required\n            showRupeeFormat={true}\n          />\n\n          <InputField\n\n            label={t('monthlyInterestRate', language)}\n            value={monthlyRate}\n            onChange={setMonthlyRate}\n            error={rateError}\n\n            placeholder={t('enterMonthlyRate', language)}\n            min=\"0\"\n            max=\"100\"\n            step=\"0.01\"\n            required\n          />\n\n          <PeriodInput\n            period={period}\n            periodUnit={periodUnit}\n            onPeriodChange={setPeriod}\n            onUnitChange={handlePeriodUnitChange}\n            error={periodError}\n            required\n          />\n\n          <SelectField\n\n            label={t('interestType', language)}\n            value={interestType}\n            onChange={setInterestType}\n            options={interestTypeOptions}\n            required\n          />\n\n          {interestType === \"compound\" && (\n            <SelectField\n\n              label={t('compoundingFrequency', language)}\n              value={compoundFreq}\n              onChange={setCompoundFreq}\n              options={compoundFreqOptions}\n              required\n            />\n          )}\n\n          {calculationError && (\n            <div className=\"calculation-error\" role=\"alert\">\n              {calculationError}\n            </div>\n          )}\n\n          <div className=\"button-group\">\n            <button\n              type=\"submit\"\n              disabled={!canCalculate || isCalculating}\n              className=\"calculate-button\"\n              aria-describedby=\"calculation-status\"\n            >\n              {isCalculating ? (\n                <>\n                  <span className=\"loading-spinner\" aria-hidden=\"true\"></span>\n                  Calculating...\n                </>\n              ) : (\n                \"Calculate Interest\"\n              )}\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={resetCalculator}\n              className=\"reset-button\"\n            >\n              Reset All\n            </button>\n          </div>\n        </form>\n\n        {result !== null && (\n          <ResultDisplay\n            principal={amount}\n            finalAmount={result}\n            interestType={interestType}\n            monthlyRate={monthlyRate}\n            period={periodInMonths}\n            periodUnit={periodUnit}\n            originalPeriod={period}\n            compoundFreq={compoundFreq}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}