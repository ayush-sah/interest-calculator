{"ast":null,"code":"var _jsxFileName = \"/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/components/PeriodInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InputField from './InputField';\nimport ToggleSwitch from './ToggleSwitch';\nimport DateRangePicker from './DateRangePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeriodInput = ({\n  period,\n  periodUnit,\n  onPeriodChange,\n  onUnitChange,\n  error,\n  required = false\n}) => {\n  _s();\n  const [inputMode, setInputMode] = useState('duration'); // 'duration' or 'dateRange'\n  const [years, setYears] = useState(0);\n  const [months, setMonths] = useState(0);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const inputModeOptions = {\n    leftOption: {\n      value: 'duration',\n      label: 'Duration'\n    },\n    rightOption: {\n      value: 'dateRange',\n      label: 'Date Range'\n    }\n  };\n  const periodUnitOptions = {\n    leftOption: {\n      value: 'months',\n      label: 'Months'\n    },\n    rightOption: {\n      value: 'years',\n      label: 'Years'\n    }\n  };\n  const handleYearMonthChange = (newYears, newMonths) => {\n    setYears(newYears || 0);\n    setMonths(newMonths || 0);\n    const totalMonths = (newYears || 0) * 12 + (newMonths || 0);\n    onPeriodChange(totalMonths);\n  };\n  const handleDateRangeChange = (start, end, calculatedPeriod) => {\n    setStartDate(start);\n    setEndDate(end);\n    onPeriodChange(calculatedPeriod);\n  };\n\n  // Dynamic label based on period unit\n  const getInputLabel = () => {\n    if (periodUnit === 'months') {\n      return 'Months';\n    } else if (periodUnit === 'years') {\n      return 'Time Period';\n    }\n    return 'Time Period';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"period-input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"period-mode-toggle\",\n      children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n        label: \"Input Mode\",\n        leftOption: inputModeOptions.leftOption,\n        rightOption: inputModeOptions.rightOption,\n        value: inputMode,\n        onChange: setInputMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), inputMode === 'duration' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"period-input-container\",\n      children: [periodUnit === 'years' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-month-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-input\",\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Years\",\n            value: years,\n            onChange: value => handleYearMonthChange(value, months),\n            placeholder: \"Years\",\n            min: \"0\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-input\",\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Months\",\n            value: months,\n            onChange: value => handleYearMonthChange(years, value),\n            placeholder: \"Months\",\n            min: \"0\",\n            max: \"11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"period-input-field\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          label: getInputLabel(),\n          value: period,\n          onChange: onPeriodChange,\n          error: error,\n          placeholder: `Enter period in ${periodUnit}`,\n          min: \"0\",\n          max: periodUnit === \"years\" ? \"100\" : \"1200\",\n          step: periodUnit === \"years\" ? \"0.1\" : \"1\",\n          required: required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"period-toggle-container\",\n        children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          label: \"Unit\",\n          leftOption: periodUnitOptions.leftOption,\n          rightOption: periodUnitOptions.rightOption,\n          value: periodUnit,\n          onChange: onUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DateRangePicker, {\n      label: \"Select Date Range\",\n      startDate: startDate,\n      endDate: endDate,\n      onDateChange: handleDateRangeChange,\n      error: error,\n      required: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(PeriodInput, \"V9++8s/XxzigoQAHpxx7B8pL51Y=\");\n_c = PeriodInput;\nexport default PeriodInput;\nvar _c;\n$RefreshReg$(_c, \"PeriodInput\");","map":{"version":3,"names":["React","useState","InputField","ToggleSwitch","DateRangePicker","jsxDEV","_jsxDEV","PeriodInput","period","periodUnit","onPeriodChange","onUnitChange","error","required","_s","inputMode","setInputMode","years","setYears","months","setMonths","startDate","setStartDate","endDate","setEndDate","inputModeOptions","leftOption","value","label","rightOption","periodUnitOptions","handleYearMonthChange","newYears","newMonths","totalMonths","handleDateRangeChange","start","end","calculatedPeriod","getInputLabel","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","min","max","step","onDateChange","_c","$RefreshReg$"],"sources":["/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/components/PeriodInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport InputField from './InputField';\nimport ToggleSwitch from './ToggleSwitch';\nimport DateRangePicker from './DateRangePicker';\n\nconst PeriodInput = ({\n  period,\n  periodUnit,\n  onPeriodChange,\n  onUnitChange,\n  error,\n  required = false\n}) => {\n  const [inputMode, setInputMode] = useState('duration'); // 'duration' or 'dateRange'\n  const [years, setYears] = useState(0);\n  const [months, setMonths] = useState(0);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const inputModeOptions = {\n    leftOption: { value: 'duration', label: 'Duration' },\n    rightOption: { value: 'dateRange', label: 'Date Range' }\n  };\n\n  const periodUnitOptions = {\n    leftOption: { value: 'months', label: 'Months' },\n    rightOption: { value: 'years', label: 'Years' }\n  };\n\n  const handleYearMonthChange = (newYears, newMonths) => {\n    setYears(newYears || 0);\n    setMonths(newMonths || 0);\n    const totalMonths = (newYears || 0) * 12 + (newMonths || 0);\n    onPeriodChange(totalMonths);\n  };\n\n  const handleDateRangeChange = (start, end, calculatedPeriod) => {\n    setStartDate(start);\n    setEndDate(end);\n    onPeriodChange(calculatedPeriod);\n  };\n\n  // Dynamic label based on period unit\n  const getInputLabel = () => {\n    if (periodUnit === 'months') {\n      return 'Months';\n    } else if (periodUnit === 'years') {\n      return 'Time Period';\n    }\n    return 'Time Period';\n  };\n\n  return (\n    <div className=\"period-input-group\">\n      <div className=\"period-mode-toggle\">\n        <ToggleSwitch\n          label=\"Input Mode\"\n          leftOption={inputModeOptions.leftOption}\n          rightOption={inputModeOptions.rightOption}\n          value={inputMode}\n          onChange={setInputMode}\n        />\n      </div>\n\n      {inputMode === 'duration' ? (\n        <div className=\"period-input-container\">\n          {periodUnit === 'years' ? (\n            <div className=\"year-month-inputs\">\n              <div className=\"year-input\">\n                <InputField\n                  label=\"Years\"\n                  value={years}\n                  onChange={(value) => handleYearMonthChange(value, months)}\n                  placeholder=\"Years\"\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n              <div className=\"month-input\">\n                <InputField\n                  label=\"Months\"\n                  value={months}\n                  onChange={(value) => handleYearMonthChange(years, value)}\n                  placeholder=\"Months\"\n                  min=\"0\"\n                  max=\"11\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"period-input-field\">\n              <InputField\n                label={getInputLabel()}\n                value={period}\n                onChange={onPeriodChange}\n                error={error}\n                placeholder={`Enter period in ${periodUnit}`}\n                min=\"0\"\n                max={periodUnit === \"years\" ? \"100\" : \"1200\"}\n                step={periodUnit === \"years\" ? \"0.1\" : \"1\"}\n                required={required}\n              />\n            </div>\n          )}\n          \n          <div className=\"period-toggle-container\">\n            <ToggleSwitch\n              label=\"Unit\"\n              leftOption={periodUnitOptions.leftOption}\n              rightOption={periodUnitOptions.rightOption}\n              value={periodUnit}\n              onChange={onUnitChange}\n            />\n          </div>\n        </div>\n      ) : (\n        <DateRangePicker\n          label=\"Select Date Range\"\n          startDate={startDate}\n          endDate={endDate}\n          onDateChange={handleDateRangeChange}\n          error={error}\n          required={required}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PeriodInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}