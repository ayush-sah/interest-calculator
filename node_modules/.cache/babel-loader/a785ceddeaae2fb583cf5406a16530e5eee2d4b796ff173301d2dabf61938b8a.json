{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n\n/**\n * Custom hook for managing input state with validation\n * @param {any} initialValue - Initial value for the input\n * @param {Function} validator - Validation function that returns error message or empty string\n * @returns {Array} [value, handleChange, error, isValid]\n */\nexport const useValidatedInput = (initialValue, validator) => {\n  _s();\n  const [value, setValue] = useState(initialValue);\n  const [error, setError] = useState(\"\");\n  const [touched, setTouched] = useState(false);\n  const handleChange = useCallback(newValue => {\n    setValue(newValue);\n    setTouched(true);\n    if (validator) {\n      const validationError = validator(newValue);\n      setError(validationError);\n    }\n  }, [validator]);\n  const reset = useCallback(() => {\n    setValue(initialValue);\n    setError(\"\");\n    setTouched(false);\n  }, [initialValue]);\n  return [value, handleChange, touched ? error : \"\",\n  // Only show error after user has interacted\n  !error, reset];\n};\n_s(useValidatedInput, \"dr1OoLby2jhVy32ErTbqpL0Xyxo=\");","map":{"version":3,"names":["useState","useCallback","useValidatedInput","initialValue","validator","_s","value","setValue","error","setError","touched","setTouched","handleChange","newValue","validationError","reset"],"sources":["/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/hooks/useValidatedInput.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\n/**\n * Custom hook for managing input state with validation\n * @param {any} initialValue - Initial value for the input\n * @param {Function} validator - Validation function that returns error message or empty string\n * @returns {Array} [value, handleChange, error, isValid]\n */\nexport const useValidatedInput = (initialValue, validator) => {\n  const [value, setValue] = useState(initialValue);\n  const [error, setError] = useState(\"\");\n  const [touched, setTouched] = useState(false);\n\n  const handleChange = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setTouched(true);\n\n      if (validator) {\n        const validationError = validator(newValue);\n        setError(validationError);\n      }\n    },\n    [validator]\n  );\n\n  const reset = useCallback(() => {\n    setValue(initialValue);\n    setError(\"\");\n    setTouched(false);\n  }, [initialValue]);\n\n  return [\n    value,\n    handleChange,\n    touched ? error : \"\", // Only show error after user has interacted\n    !error,\n    reset,\n  ];\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,YAAY,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACG,YAAY,CAAC;EAChD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,YAAY,GAAGX,WAAW,CAC7BY,QAAQ,IAAK;IACZN,QAAQ,CAACM,QAAQ,CAAC;IAClBF,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAIP,SAAS,EAAE;MACb,MAAMU,eAAe,GAAGV,SAAS,CAACS,QAAQ,CAAC;MAC3CJ,QAAQ,CAACK,eAAe,CAAC;IAC3B;EACF,CAAC,EACD,CAACV,SAAS,CACZ,CAAC;EAED,MAAMW,KAAK,GAAGd,WAAW,CAAC,MAAM;IAC9BM,QAAQ,CAACJ,YAAY,CAAC;IACtBM,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAElB,OAAO,CACLG,KAAK,EACLM,YAAY,EACZF,OAAO,GAAGF,KAAK,GAAG,EAAE;EAAE;EACtB,CAACA,KAAK,EACNO,KAAK,CACN;AACH,CAAC;AAACV,EAAA,CA/BWH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}