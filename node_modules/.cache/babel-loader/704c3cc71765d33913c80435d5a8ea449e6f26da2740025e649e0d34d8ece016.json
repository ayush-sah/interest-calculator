{"ast":null,"code":"var _jsxFileName = \"/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/components/DateRangePicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { t } from '../utils/translations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateRangePicker = ({\n  label,\n  startDate,\n  endDate,\n  onDateChange,\n  error,\n  required = false\n}) => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const [isOpen, setIsOpen] = useState(false);\n  const [tempStartDate, setTempStartDate] = useState(startDate);\n  const [tempEndDate, setTempEndDate] = useState(endDate);\n  const calculatePeriodInMonths = (start, end) => {\n    if (!start || !end) return 0;\n    const startDateObj = new Date(start);\n    const endDateObj = new Date(end);\n    const yearDiff = endDateObj.getFullYear() - startDateObj.getFullYear();\n    const monthDiff = endDateObj.getMonth() - startDateObj.getMonth();\n    return yearDiff * 12 + monthDiff;\n  };\n  const handleDone = () => {\n    const period = calculatePeriodInMonths(tempStartDate, tempEndDate);\n    onDateChange(tempStartDate, tempEndDate, period);\n    setIsOpen(false);\n  };\n  const formatDateRange = () => {\n    if (!startDate || !endDate) return '';\n    const start = new Date(startDate).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\n    const end = new Date(endDate).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\n    return `${start} - ${end}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"input-label\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"required-indicator\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-range-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `date-range-button ${error ? 'input-error' : ''}`,\n        onClick: () => setIsOpen(!isOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-range-text\",\n          children: formatDateRange() || t('selectDateRange', language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-range-icon\",\n          children: \"\\uD83D\\uDCC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: t('startDate', language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: tempStartDate,\n            onChange: e => setTempStartDate(e.target.value),\n            className: \"date-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: t('endDate', language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: tempEndDate,\n            onChange: e => setTempEndDate(e.target.value),\n            className: \"date-input\",\n            min: tempStartDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDone,\n          className: \"date-range-close\",\n          disabled: !tempStartDate || !tempEndDate,\n          children: t('done', language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangePicker, \"AIaHwavJVip99gPH0EptxyEwQRU=\", false, function () {\n  return [useLanguage];\n});\n_c = DateRangePicker;\nexport default DateRangePicker;\nvar _c;\n$RefreshReg$(_c, \"DateRangePicker\");","map":{"version":3,"names":["React","useState","useLanguage","t","jsxDEV","_jsxDEV","DateRangePicker","label","startDate","endDate","onDateChange","error","required","_s","language","isOpen","setIsOpen","tempStartDate","setTempStartDate","tempEndDate","setTempEndDate","calculatePeriodInMonths","start","end","startDateObj","Date","endDateObj","yearDiff","getFullYear","monthDiff","getMonth","handleDone","period","formatDateRange","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","value","onChange","e","target","min","disabled","role","_c","$RefreshReg$"],"sources":["/Users/ayush.sah/Documents/Personal/interest-calculator-1/src/components/DateRangePicker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { t } from '../utils/translations';\n\nconst DateRangePicker = ({\n  label,\n  startDate,\n  endDate,\n  onDateChange,\n  error,\n  required = false\n}) => {\n  const { language } = useLanguage();\n  const [isOpen, setIsOpen] = useState(false);\n  const [tempStartDate, setTempStartDate] = useState(startDate);\n  const [tempEndDate, setTempEndDate] = useState(endDate);\n\n  const calculatePeriodInMonths = (start, end) => {\n    if (!start || !end) return 0;\n    \n    const startDateObj = new Date(start);\n    const endDateObj = new Date(end);\n    \n    const yearDiff = endDateObj.getFullYear() - startDateObj.getFullYear();\n    const monthDiff = endDateObj.getMonth() - startDateObj.getMonth();\n    \n    return yearDiff * 12 + monthDiff;\n  };\n\n  const handleDone = () => {\n    const period = calculatePeriodInMonths(tempStartDate, tempEndDate);\n    onDateChange(tempStartDate, tempEndDate, period);\n    setIsOpen(false);\n  };\n\n  const formatDateRange = () => {\n    if (!startDate || !endDate) return '';\n    \n    const start = new Date(startDate).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\n    const end = new Date(endDate).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\n    \n    return `${start} - ${end}`;\n  };\n\n  return (\n    <div className=\"input-group\">\n      <label className=\"input-label\">\n        {label}\n        {required && <span className=\"required-indicator\">*</span>}\n      </label>\n      \n      <div className=\"date-range-container\">\n        <button\n          type=\"button\"\n          className={`date-range-button ${error ? 'input-error' : ''}`}\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          <span className=\"date-range-text\">\n            {formatDateRange() || t('selectDateRange', language)}\n          </span>\n          <span className=\"date-range-icon\">ðŸ“…</span>\n        </button>\n        \n        {isOpen && (\n          <div className=\"date-range-popup\">\n            <div className=\"date-input-group\">\n              <label>{t('startDate', language)}</label>\n              <input\n                type=\"date\"\n                value={tempStartDate}\n                onChange={(e) => setTempStartDate(e.target.value)}\n                className=\"date-input\"\n              />\n            </div>\n            \n            <div className=\"date-input-group\">\n              <label>{t('endDate', language)}</label>\n              <input\n                type=\"date\"\n                value={tempEndDate}\n                onChange={(e) => setTempEndDate(e.target.value)}\n                className=\"date-input\"\n                min={tempStartDate}\n              />\n            </div>\n            \n            <button\n              type=\"button\"\n              onClick={handleDone}\n              className=\"date-range-close\"\n              disabled={!tempStartDate || !tempEndDate}\n            >\n              {t('done', language)}\n            </button>\n          </div>\n        )}\n      </div>\n      \n      {error && (\n        <span className=\"error-message\" role=\"alert\">\n          {error}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default DateRangePicker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}